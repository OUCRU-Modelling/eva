[
  {
    "objectID": "ipsum.html",
    "href": "ipsum.html",
    "title": "2  Demographic data from census 2019",
    "section": "",
    "text": "3 Age pyramid\nThe wealth asset index was constructed by principal components analysis (PCA) using information on the ownership of dwelling, water supply, air condition, computer, washer, refrigerator, tv, radio, electricity, hot water, phone that are related to the household’s wealth. Follow https://pmc.ncbi.nlm.nih.gov/articles/PMC5348557/ and https://rpubs.com/Sternonyos/526030\nCode\nlibrary(psych)\n\ndf$ownership &lt;- ifelse(df$OWNERSHIP == 1,1,0)\ndf$watsup &lt;- ifelse(df$WATSUP == 10,1,0)\ndf$aircon &lt;- ifelse(df$AIRCON == 10,0,1)\ndf$computer &lt;- ifelse(df$COMPUTER == 2,1,0)\ndf$washer &lt;- ifelse(df$WASHER == 2,1,0)\ndf$refrig &lt;- ifelse(df$REFRIG == 2,1,0)\ndf$tv &lt;- ifelse(df$TV == 20,1,0)\ndf$radio &lt;- ifelse(df$RADIO == 2,1,0)\ndf$electric &lt;- ifelse(df$ELECTRIC == 1,1,0)\ndf$hotwater &lt;- ifelse(df$HOTWATER == 2,1,0)\ndf$phone &lt;- ifelse(df$PHONE == 2,1,0)\n\nwealth_index &lt;- df[,c(\"qh\",\"ownership\",\"watsup\",\"aircon\",\"computer\",\n                      \"washer\",\"refrig\",\"tv\",\"radio\",\"electric\",\n                      \"hotwater\",\"phone\")] \n\nprn&lt;- principal(wealth_index[,-1], rotate=\"varimax\", \n                      nfactors=3,covar=T, scores=TRUE)\nindex=prn$scores[,1]\nnlab&lt;-c(1,2,3,4,5)\nnewdata&lt;-mutate(wealth_index,\n                quintile=as.factor(cut(index,breaks=5,labels=nlab)))\n\nwealdf &lt;- newdata %&gt;% group_by(qh,quintile) %&gt;% count()\n\nwealdf$quintile &lt;-  case_when(\n  wealdf$quintile == 1 ~ \"Poorest, 20%\",\n  wealdf$quintile == 2 ~ \"Near poor, 20%\",\n  wealdf$quintile == 3 ~ \"Middle, 20%\",\n  wealdf$quintile == 4 ~ \"Richer, 20%\",\n  wealdf$quintile == 5 ~ \"Richest, 20%\") %&gt;% \n  factor(levels = c(\"Poorest, 20%\", \n                    \"Near poor, 20%\",\n                    \"Middle, 20%\",\n                    \"Richer, 20%\",\n                    \"Richest, 20%\")\n  )\n\nwealdf %&gt;% scale_per() %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = quintile)) +\n  facet_wrap(vars(qh),\n             # scales = \"free\",\n             ncol = 5)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Socioeconomic status (quintile)\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 6),\n        axis.text.y = element_text(size = 6))"
  },
  {
    "objectID": "ipsum.html#social-variable",
    "href": "ipsum.html#social-variable",
    "title": "2  Demographic data from census 2019",
    "section": "4.1 Social Variable",
    "text": "4.1 Social Variable\n\nEducationUran-rural statusNumber of own children under age 5 in householdReligionOwership\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOwnership of dwelling"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Equity in Vaccine Access in Ho Chi Minh City",
    "section": "",
    "text": "1 Measles vaccine coverage\n\n\nCode\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(janitor)\nlibrary(stringi)\nlibrary(patchwork)\nlibrary(vegan)\ninvisible(Sys.setlocale(\"LC_TIME\", \"English\"))\ndf_raw &lt;- readRDS(\"D:/OUCRU/assigned github/vac_coverage/data/vaxreg_hcmc_measles.rds\")\n\n\n\n\nCode\n## data cleaning\ndf &lt;- df_raw %&gt;% na.omit() %&gt;% \n                 subset(date_m1 &gt; dob & \n                        date_m2 &gt; dob & \n                        date_m1 &lt; date_m2 &\n                        year(date_m2) &lt;= 2024 &\n                        year(date_m1) &gt;= min(year(df_raw$dob))) \n\n\nVaccine shortage public started in May 2022 source\n\n\n2 Vaccine coverage (1st and 2nd dose) in Ho Chi Minh city\n\n\nCode\n## vaccine coverage 1st and 2nd dose\ndate_compute &lt;- seq(as.Date(\"2022-09-01\"),as.Date(\"2024-11-20\"),by = \"weeks\")\n\n## second dose\nout_fn &lt;- data.frame()\n\nfor (i in 1:length(date_compute)){\n  cov &lt;- df %&gt;% \n    mutate(\n      age = decimal_date(date_compute[i]) - decimal_date(dob),\n      is_m2 = if_else(date_m2 &lt;= date_compute[i], 1, 0))  %&gt;% \n    filter(age &gt;= 1, age &lt;= 5) %&gt;% \n    summarise(m2 = sum(is_m2, na.rm = T), n = n(), cov = m2/n)\n  \n  cov_2w &lt;- df %&gt;% \n    mutate(\n      age = decimal_date(date_compute[i]) - decimal_date(dob),\n      is_m2 = if_else(date_m2 &lt;= date_compute[i] %m-% weeks(2), 1, 0))  %&gt;% \n    filter(age &gt;= 1 + 0.5/12, age &lt;= 5 + 0.5/12) %&gt;% \n    summarise(m2 = sum(is_m2, na.rm = T), n = n(), cov = m2/n)\n  \n  out &lt;- data.frame(date = as.Date(date_compute[i]),\n                    cov = as.numeric(cov$cov),\n                    cov_2w = as.numeric(cov_2w$cov))\n  \n  out_fn &lt;- rbind(out_fn,out)\n}\n\n\n## first dose\nout_fn1 &lt;- data.frame()\n\nfor (i in 1:length(date_compute)){\n  \n  cova &lt;- df %&gt;% \n    mutate(\n      age = decimal_date(date_compute[i]) - decimal_date(dob),\n      is_m1 = if_else(date_m1 &lt;= date_compute[i], 1, 0))  %&gt;% \n    filter(age &gt;= 0.75, age &lt;= 5) %&gt;% \n    summarise(m1 = sum(is_m1, na.rm = T), n = n(), cov = m1/n)\n  \n  cov_2wa &lt;- df %&gt;% \n    mutate(\n      age = decimal_date(date_compute[i]) - decimal_date(dob),\n      is_m1 = if_else(date_m1 &lt;= date_compute[i] %m-% weeks(2), 1, 0))  %&gt;% \n    filter(age &gt;= 0.75 + 0.5/12, age &lt;= 5 + 0.5/12) %&gt;% \n    summarise(m1 = sum(is_m1, na.rm = T), n = n(), cov = m1/n)\n  \n  outa &lt;- data.frame(date = as.Date(date_compute[i]),\n                     cov = as.numeric(cova$cov),\n                     cov_2w = as.numeric(cov_2wa$cov))\n  \n  out_fn1 &lt;- rbind(out_fn1,outa)\n}\n\n\n## plot\n\nvac_co &lt;- ggplot()+\n  geom_line(data = out_fn,aes(x = date,y = cov*100,color=\"2\"))+\n  geom_line(data = out_fn1,aes(x = date,y = cov*100,color=\"1\"))+\n  scale_y_continuous(limits = c(0, 100), breaks = seq(0,100,by = 10)) +\n  labs(x = \"Date\",y = \"Vaccine coverage (%)\")+\n  scale_x_date(breaks = \"4 month\",\n               date_labels= \"%b %Y\",\n               limits = c(as.Date(\"2022-09-01\"),as.Date(\"2024-11-20\")))+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1))+\n  scale_color_manual(name=\"Dose\", values=c(\"1\"=\"red\", \"2\"=\"blue\"))+\n  theme_bw()\n\nvac_co2w &lt;-ggplot()+\n  geom_line(data = out_fn,aes(x = date,y = cov_2w*100,color=\"2\"))+\n  geom_line(data = out_fn1,aes(x = date,y = cov_2w*100,color=\"1\"))+\n  scale_y_continuous(limits = c(0, 100), breaks = seq(0,100,by = 10)) +\n  labs(x = \"Date\",y = \"Vaccine coverage with 2-week hypothesis (%)\")+\n  scale_x_date(breaks = \"4 month\",\n               date_labels= \"%b %Y\",\n               limits = c(as.Date(\"2022-09-01\"),as.Date(\"2024-11-20\")))+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1))+\n  scale_color_manual(name=\"Dose\", values=c(\"1\"=\"red\", \"2\"=\"blue\"))+\n  theme_bw()\n\n\n\n\nCode\nvac_co | vac_co2w\n\n\n\n\n\n\n\n3 Coverage\n\n\nCode\ndistrict &lt;- unique(df$district)\n\nout_d &lt;- data.frame()\nout_d1 &lt;- data.frame()\n\nfor (k in 1:length(district)){\n  dfd &lt;- df %&gt;% filter(district == district[k])\n  for (i in 1:length(date_compute)){\n    cov &lt;- dfd %&gt;% \n      mutate(\n        age = decimal_date(date_compute[i]) - decimal_date(dob),\n        is_m2 = if_else(date_m2 &lt;= date_compute[i], 1, 0))  %&gt;% \n      filter(age &gt;= 1, age &lt;= 5) %&gt;% \n      summarise(m2 = sum(is_m2, na.rm = T), n = n(), cov = m2/n)\n    \n    cov_2w &lt;- dfd %&gt;% \n      mutate(\n        age = decimal_date(date_compute[i]) - decimal_date(dob),\n        is_m2 = if_else(date_m2 &lt;= date_compute[i] %m-% weeks(2), 1, 0))  %&gt;% \n      filter(age &gt;= 1 + 0.5/12, age &lt;= 5 + 0.5/12) %&gt;% \n      summarise(m2 = sum(is_m2, na.rm = T), n = n(), cov = m2/n)\n    \n    out_d1 &lt;- data.frame(district = as.character(district[k]),\n                         date = as.Date(date_compute[i]),\n                         cov = as.numeric(cov$cov),\n                         cov_2w = as.numeric(cov_2w$cov))\n    \n    out_d &lt;- rbind(out_d,out_d1)\n  }  \n}\n\nmeancv &lt;- out_d %&gt;% \n  group_by(district) %&gt;% \n  summarise(mean = mean(cov)) \n\nsorted &lt;- meancv[order(-meancv$mean),]\n\nvac_cov &lt;- out_d %&gt;% mutate(dis = factor(district,\n                              levels = as.character(sorted$district))) %&gt;% \nggplot()+\n  geom_line(aes(x = date,y = cov*100,color=\"2\"))+\n  scale_y_continuous(limits = c(0, 100), breaks = seq(0,100,by = 10)) +\n  labs(x = \"Date\",y = \"Vaccine coverage (%)\")+\n  scale_x_date(breaks = \"4 months\",\n               date_labels= \"%b %Y\",\n               limits = c(as.Date(\"2022-09-01\"),as.Date(\"2024-11-20\")))+\n  facet_wrap(vars(dis),ncol = 1)+\n  scale_color_manual(name=\"Dose\", values=c(\"1\"=\"red\", \"2\"=\"blue\"))+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 45,size = 8,hjust=1),\n        axis.text.y = element_text(size = 6))\n\n\n\n\n4 Timely vaccination\n\n\nCode\nweek &lt;- seq(as.Date(\"2022-05-01\"),as.Date(\"2024-07-01\"),by = \"month\")\n\ndttlv &lt;- df[,c(\"dob\",\"district\",\"date_m1\",\"date_m2\")] \nout_timely &lt;- data.frame()\n\nfor (k in 1:length(district)){\n  td &lt;- subset(dttlv, district == district[k]) \n  for (i in 1:length(week)){\n    td$lackd &lt;- week[i]\n    td$ageuntil &lt;- decimal_date(td$lackd) - decimal_date(td$dob)\n    \n    ## subset children aged from 9 months to 9 months 2 weeks at chosen time\n    slec &lt;- td[td$ageuntil &gt;= 0.75 & td$ageuntil &lt;= 0.75 + 0.5*(1/12),]\n    \n    slec$agevac &lt;- decimal_date(slec$date_m1) - decimal_date(slec$dob)\n    slec$vac_on_date1 &lt;- ifelse(slec$agevac &lt; slec$ageuntil + 1/12,1,0)\n    slec$vac_on_date1 &lt;- replace(slec$vac_on_date, is.na(slec$vac_on_date1),0)\n    \n    re &lt;- slec %&gt;% group_by(vac_on_date1) %&gt;% count()  \n    \n    if(nrow(re) == 1){\n      re[2,] &lt;- re[1,]\n      re[1,1] &lt;- 0  \n      re[1,2] &lt;- 0  \n    } \n    \n    cus &lt;- data.frame(district = district[k],\n                      date = week[i],\n                      per = as.numeric(re[2,2])/(as.numeric(re[2,2])+as.numeric(re[1,2])))\n    out_timely &lt;- rbind(out_timely,cus)\n  }\n}\n\n\n\n\n5 IPSUM analysis\n\n\nCode\nipsum &lt;- read_csv(\"data/GEO1_VN2019_79.csv\")\n\nipsum$district &lt;- case_when(\n  ipsum$GEO2_VN == 704079760 ~ \"Quận 1\",\n  ipsum$GEO2_VN == 704079761 ~ \"Quận 12\",\n  ipsum$GEO2_VN == 704079762 ~ \"Thủ Đức\",\n  ipsum$GEO2_VN == 704079763 ~ \"Thủ Đức\",\n  ipsum$GEO2_VN == 704079764 ~ \"Gò Vấp\",\n  ipsum$GEO2_VN == 704079765 ~ \"Bình Thạnh\",\n  ipsum$GEO2_VN == 704079766 ~ \"Tân Bình\",\n  ipsum$GEO2_VN == 704079767 ~ \"Tân Phú\",\n  ipsum$GEO2_VN == 704079768 ~ \"Phú Nhuận\",\n  ipsum$GEO2_VN == 704079769 ~ \"Thủ Đức\",\n  ipsum$GEO2_VN == 704079770 ~ \"Quận 3\",\n  ipsum$GEO2_VN == 704079771 ~ \"Quận 10\",\n  ipsum$GEO2_VN == 704079772 ~ \"Quận 11\",\n  ipsum$GEO2_VN == 704079773 ~ \"Quận 4\",\n  ipsum$GEO2_VN == 704079774 ~ \"Quận 5\",\n  ipsum$GEO2_VN == 704079775 ~ \"Quận 6\",\n  ipsum$GEO2_VN == 704079776 ~ \"Quận 8\",\n  ipsum$GEO2_VN == 704079777 ~ \"Bình Tân\", \n  ipsum$GEO2_VN == 704079778 ~ \"Quận 7\",\n  ipsum$GEO2_VN == 704079783 ~ \"Củ Chi\",\n  ipsum$GEO2_VN == 704079784 ~ \"Hóc Môn\",\n  ipsum$GEO2_VN == 704079785 ~ \"Bình Chánh\",\n  ipsum$GEO2_VN == 704079786 ~ \"Nhà Bè\",\n  ipsum$GEO2_VN == 704079787 ~ \"Cần Giờ\") %&gt;% \n  stri_trans_general(\"latin-ascii\") %&gt;%\n  str_remove_all(\"Quan\") %&gt;% \n  trimws(which = \"both\")\n\n## census for denominator\nhcm19 &lt;- readRDS(\"D:/OUCRU/hfmd/data/census2019.rds\") %&gt;% \n  filter(province == \"Thành phố Hồ Chí Minh\")\n\nhcm19$district &lt;- hcm19$district %&gt;%\n  str_remove_all(\"Quận|Huyện\") %&gt;%\n  str_replace_all(\n    c(\"\\\\b2\\\\b|\\\\b9\\\\b\"  = \"Thủ Đức\")) %&gt;%\n  stri_trans_general(\"latin-ascii\") %&gt;% \n  trimws(which = \"both\")\n\npopdis &lt;- hcm19 %&gt;% group_by(district) %&gt;% \n  summarise(n = sum(n))\n\ndistrictc &lt;- popdis$district\n\n\n\n\nCode\n## function to calculate percentage of each district\nscale_per &lt;- function(data){\n  ou &lt;- data.frame()\n  for (i in 1:22){\n    oo &lt;- data %&gt;% filter(district == districtc[i]) %&gt;% \n      mutate(pop = rep(as.numeric(popdis$n[popdis$district == districtc[i]])),\n             per = (n/pop)*100)\n    ou &lt;- rbind(ou,oo)\n  }\n  return(ou)\n}\n\n\n\n\nCode\n## Level of education or training currently attending\nipsum$edu &lt;-  case_when(\n  ipsum$VN2019A_SCHOOLLEV == 99 ~ \"NIU\",\n  ipsum$VN2019A_SCHOOLLEV == 1 ~ \"Pre-school below 5 years old\",\n  ipsum$VN2019A_SCHOOLLEV == 2 ~ \"Pre-school at 5 years old\",\n  ipsum$VN2019A_SCHOOLLEV == 3 ~ \"Primary\",\n  ipsum$VN2019A_SCHOOLLEV == 4 ~ \"Lower secondary\",\n  ipsum$VN2019A_SCHOOLLEV == 5 ~ \"Higher secondary\",\n  ipsum$VN2019A_SCHOOLLEV == 6 ~ \"Pre-intermediate\",\n  ipsum$VN2019A_SCHOOLLEV == 7 ~ \"Intermediate\",\n  ipsum$VN2019A_SCHOOLLEV == 8 ~ \"College\",\n  ipsum$VN2019A_SCHOOLLEV == 9 ~ \"University\",\n  ipsum$VN2019A_SCHOOLLEV == 10 ~ \"Master\",\n  ipsum$VN2019A_SCHOOLLEV == 11 ~ \"Ph.D. (doctorate)\") %&gt;% \n  \n  factor(levels = c(\"NIU\", \n                    \"Pre-school below 5 years old\",\n                    \"Pre-school at 5 years old\",\n                    \"Primary\",\n                    \"Lower secondary\",\n                    \"Higher secondary\",\n                    \"Pre-intermediate\",\n                    \"Intermediate\",\n                    \"College\",\n                    \"University\",\n                    \"Master\",\n                    \"Ph.D. (doctorate)\")\n  )\n\nhcm_edu &lt;- ipsum %&gt;% group_by(district,edu) %&gt;% count()\n\nedu &lt;- scale_per(hcm_edu) %&gt;% filter(edu != \"NIU\") %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = edu)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Education\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 8)) \n\n## Employment status\nipsum$employ &lt;-  case_when(\n  ipsum$VN2019A_EMPSTAT == 1 ~ \"Employed\",\n  ipsum$VN2019A_EMPSTAT == 2 ~ \"Unemployed\",\n  ipsum$VN2019A_EMPSTAT == 3 ~ \"Inactive\",\n  ipsum$VN2019A_EMPSTAT == 4 ~ \"Overseas\",\n  ipsum$VN2019A_EMPSTAT == 9 ~ \"NIU\") %&gt;% \n  \n  factor(levels = c(\"Employed\",\n                    \"Unemployed\",\n                    \"Inactive\",\n                    \"Overseas\",\n                    \"NIU\")\n  )\n\nhcm_employ &lt;- ipsum %&gt;% group_by(district,employ) %&gt;% count()\n\nemploy &lt;- scale_per(hcm_employ) %&gt;% filter(employ != \"NIU\") %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = employ)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Employment status\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15)) \n\n##Number of sons living in household\nipsum$son_in_house &lt;- as.character(ipsum$VN2019A_CHHOMEM)\nipsum$son_in_house &lt;-  ifelse(ipsum$son_in_house == \"0\",\"None\",\n                              ifelse(ipsum$son_in_house == \"7\",\"7+\",\n                                     ifelse(ipsum$son_in_house == \"99\",\"NIU\",\n                                            ipsum$son_in_house)))\n\nhcm_sih &lt;- ipsum %&gt;% group_by(district,son_in_house) %&gt;% count()\n\n\n##Number of daughter living in household\nipsum$dau_in_house &lt;- as.character(ipsum$VN2019A_CHHOMEF)\nipsum$dau_in_house &lt;-  ifelse(ipsum$dau_in_house == \"0\",\"None\",\n                              ifelse(ipsum$dau_in_house == \"7\",\"7+\",\n                                     ifelse(ipsum$dau_in_house == \"99\",\"NIU\",\n                                            ipsum$dau_in_house)))\n\nhcm_dih &lt;- ipsum %&gt;% group_by(district,dau_in_house) %&gt;% count()\n\n\nson_dau &lt;- full_join(scale_per(hcm_sih) %&gt;% select(district,son_in_house,per),\n          scale_per(hcm_dih) %&gt;% select(district,dau_in_house,per),\n          by = c(\"district\" = \"district\",\n                 \"son_in_house\" = \"dau_in_house\")) \n\ncolnames(son_dau) &lt;- c(\"district\",\"num_child\",\"son\",\"daughter\")\n\nhcm_child&lt;- son_dau %&gt;% pivot_longer(cols=c('son', 'daughter'),\n                            names_to='sex',\n                            values_to='per')\n\nhcm_child$per &lt;- replace(hcm_child$per, is.na(hcm_child$per), 0)\n\nhcm_child &lt;- hcm_child %&gt;% mutate(\n  per2 = case_when(\n    sex == \"daughter\" ~ -per,\n    TRUE ~ per\n  ))\n\nhcm_childa &lt;- hcm_child %&gt;% filter(num_child != \"NIU\") \n\npop_range &lt;- range(hcm_childa$per2 %&gt;% na.omit())\n\npop_range_breaks &lt;- pretty(pop_range, n = 6)\n\nchil &lt;- hcm_child %&gt;% filter(num_child != \"NIU\") %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per2,\n               y = num_child,\n               fill = sex)) +\n  scale_x_continuous(breaks  = pop_range_breaks,\n                     labels = abs(pop_range_breaks))+\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  theme_light()+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Number of children\")\n\n## Faith or religion\nipsum$reli &lt;-  case_when(\n  ipsum$VN2019A_RELIG2 == 99 ~ \"NIU\",\n  ipsum$VN2019A_RELIG2 == 1 ~ \"Buddhism\",\n  ipsum$VN2019A_RELIG2 == 2 ~ \"Catholic\",\n  ipsum$VN2019A_RELIG2 == 3 ~ \"Evangelical\",\n  ipsum$VN2019A_RELIG2 == 4 ~ \"Caodaism\",\n  ipsum$VN2019A_RELIG2 == 5 ~ \"Hoa Hao Buddhism\",\n  ipsum$VN2019A_RELIG2 == 6 ~ \"Islamic\",\n  ipsum$VN2019A_RELIG2 == 7 ~ \"Baha’i Faith\",\n  ipsum$VN2019A_RELIG2 == 8 ~ \"Pure Land Buddhist Association of Vietnam\",\n  ipsum$VN2019A_RELIG2 == 9 ~ \"Tu An Hieu Nghia (Four Debts of Gratitude) Buddhism\",\n  ipsum$VN2019A_RELIG2 == 11 ~ \"Cham Brahmin\",\n  ipsum$VN2019A_RELIG2 == 12 ~ \"Church of Jesus Christ of Latter-day Saints (Mormon)\",\n  ipsum$VN2019A_RELIG2 == 13 ~ \"Hieu Nghia Ta Lon Buddhism (Registration Granted)\",\n  ipsum$VN2019A_RELIG2 == 14 ~ \"Vietnam Seventh-day Adventist Church\") %&gt;% \n  \n  factor(levels = c(\"NIU\",\n                    \"Buddhism\",\n                    \"Catholic\",\n                    \"Evangelical\",\n                    \"Caodaism\",\n                    \"Hoa Hao Buddhism\",\n                    \"Islamic\",\n                    \"Baha’i Faith\",\n                    \"Pure Land Buddhist Association of Vietnam\",\n                    \"Tu An Hieu Nghia (Four Debts of Gratitude) Buddhism\",\n                    \"Cham Brahmin\",\n                    \"Church of Jesus Christ of Latter-day Saints (Mormon)\",\n                    \"Hieu Nghia Ta Lon Buddhism (Registration Granted)\",\n                    \"Vietnam Seventh-day Adventist Church\")\n  )\n\nhcm_reli &lt;- ipsum %&gt;% group_by(district,reli) %&gt;% count()\n\nreli &lt;- scale_per(hcm_reli) %&gt;% filter(reli != \"NIU\" & per &gt;=0.1) %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = reli)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Religion\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15)) \n\n\n\n\n6 Vaccination delay in Ho Chi Minh city\n\n\nCode\n# Delay distribution\n\ndttlv$date_m1_ontime &lt;- dttlv$dob %m+% months(9)\ndttlv$delay &lt;- interval(dttlv$date_m1_ontime,dttlv$date_m1) / months(1)\n\n\n## Delay distribution of HCMC\n\n\ndttlv %&gt;% na.omit() %&gt;% \n  filter(delay &gt; 0 & date_m1_ontime &gt;= as.Date(\"2022-05-01\")\n         & date_m1_ontime &lt;= as.Date(\"2023-12-31\")) %&gt;% \n  ggplot(aes(x=delay)) +\n  geom_density()+\n  labs(x = \"Month\")\n\n\n\n\n\nCode\n## Each districts with demographic variables\nmeandl &lt;- dttlv %&gt;% na.omit() %&gt;% \n  filter(delay &gt; 0 & date_m1_ontime &gt;= as.Date(\"2022-05-01\")\n         & date_m1_ontime &lt;= as.Date(\"2023-12-31\")) %&gt;% \n  group_by(district) %&gt;% \n  summarise(median = median(delay,na.rm = T)) \n\nvac_dl &lt;- dttlv %&gt;% \n  mutate(dis = factor(district, \n                      levels = as.character(sorted$district))) %&gt;% \n  filter(delay &gt; 0 & date_m1_ontime &gt;= as.Date(\"2022-05-01\")\n         & date_m1_ontime &lt;= as.Date(\"2023-12-31\")) %&gt;% \n  ggplot(aes(x=delay)) +\n  geom_density()+\n  labs(x = \"Month\")+\n  xlim(0,5)+\n  facet_wrap(vars(dis),ncol = 1)+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1)) \n##\nmonth &lt;- seq(as.Date(\"2022-05-01\"),as.Date(\"2024-01-01\"),by = \"month\")\ndis2 &lt;- dttlv$district %&gt;% unique()\nuot &lt;- data.frame()\nuot2 &lt;- data.frame()\nfor (k in 1:length(dis2)){\n  dtd &lt;- dttlv %&gt;% filter(district == dis2[k])\n  for (i in 1:(length(month)-1)){\n    emon &lt;- dtd %&gt;% na.omit() %&gt;% \n      filter(date_m1_ontime &gt;= month[i] & \n               date_m1_ontime &lt;= month[i+1] &\n               delay &gt; 0)\n    uot2 &lt;- data.frame(district = dis2[k],\n                       month = month[i],\n                       del = median(emon$delay)) \n    uot &lt;- rbind(uot,uot2)\n  }  \n}\n\nmonth_delay &lt;- uot %&gt;% \n  mutate(dis = factor(district, \n                      levels = as.character(sorted$district))) %&gt;%\n  ggplot(aes(x = month,y=del)) +\n  geom_bar(stat = \"identity\")+\n  labs(x = \"Month\", y = \"The median of delayed month\")+\n  facet_wrap(vars(dis),ncol = 1)+\n  scale_x_date(breaks = \"2 months\",\n               date_labels= \"%b %Y\")+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1)) \n\n\n\n\n7 Vaccine coverage and variables\n\n\nCode\nvac_cov | time_vac | vac_dl | month_delay | edu | employ | reli | chil  \n\n\n\n\n\n\n\n8 Nestedness analysis of economical variable\n\n\nCode\nipsum$tv &lt;- ifelse(ipsum$VN2019A_TV == 1,1,0)\nipsum$radio &lt;- ifelse(ipsum$VN2019A_RADIO == 1,1,0)\nipsum$computer &lt;- ifelse(ipsum$VN2019A_COMPUTER == 1,1,0)\nipsum$phone &lt;- ifelse(ipsum$VN2019A_PHONE == 1,1,0)\nipsum$refrig &lt;- ifelse(ipsum$VN2019A_REFRIG == 1,1,0)\nipsum$washer &lt;- ifelse(ipsum$VN2019A_WASHER == 1,1,0)\nipsum$watheat &lt;- ifelse(ipsum$VN2019A_WATHEAT == 1,1,0)\nipsum$aircon &lt;- ifelse(ipsum$VN2019A_AIRCON == 1,1,0)\nipsum$motorcyc &lt;- ifelse(ipsum$VN2019A_MOTORCYC == 1,1,0)\nipsum$bicycle &lt;- ifelse(ipsum$VN2019A_BIKE == 1,1,0)\nipsum$car &lt;- ifelse(ipsum$VN2019A_CAR == 1,1,0)\n\nwealth_index &lt;- ipsum[,c(\"district\",\"tv\",\"computer\",\"phone\",\n                      \"refrig\",\"washer\",\"watheat\",\"aircon\",\"motorcyc\",\n                      \"bicycle\",\"car\")] \n\nd1 &lt;- nestedtemp(wealth_index[,-1])\n\nplot(d1, kind=\"incid\",names = TRUE,ylab=\"\",yaxt=\"n\",las=1)\n\n\n\n\n\n\n\nCode\n## rearrange column follow the order of nestedness analysis \n\nwealth_index &lt;- ipsum[,c(\"district\",\"phone\",\"motorcyc\",\"tv\",\"refrig\",\n                         \"washer\",\"computer\",\"aircon\",\"watheat\",\n                         \"bicycle\",\"car\")] \n\n## select the highest property of each individual \nwealth_index &lt;- cbind(wealth_index[,1],\n                      wealth_index[,-1] %&gt;%\n                        rowwise() %&gt;%\n                        mutate(highest_property = names(.)[max(which(c_across(everything()) == 1))]) %&gt;%\n                        ungroup()) %&gt;% na.omit()\n\nwealth_index$quantile  &lt;-  \n           case_when(wealth_index$highest_property == \"car\" ~ \"Richest, 25%\",\n                     wealth_index$highest_property == \"bicycle\" | \n                     wealth_index$highest_property == \"watheat\" | \n                     wealth_index$highest_property == \"aircon\"  ~ \"Middle, 25%\",\n                     wealth_index$highest_property == \"washer\" | \n                     wealth_index$highest_property == \"refrig\"| \n                     wealth_index$highest_property == \"computer\"  ~ \"Lower Middle, 25%\",\n                     wealth_index$highest_property == \"phone\" | \n                     wealth_index$highest_property == \"motorcyc\" | \n                     wealth_index$highest_property == \"tv\"   ~ \"Poorest, 25%\") %&gt;% \n           factor(levels = c(\"Richest, 25%\",\n                             \"Middle, 25%\",\n                             \"Lower Middle, 25%\",\n                             \"Poorest, 25%\")\n                    )\n\nwealth &lt;- wealth_index %&gt;% group_by(district) %&gt;% \n  count(quantile) %&gt;% scale_per() %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = quantile)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Wealth Quantile\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15)) \n\n\n\n\nCode\nvac_cov | time_vac | vac_dl | month_delay | wealth |edu | employ | reli | chil"
  },
  {
    "objectID": "vac_cov.html",
    "href": "vac_cov.html",
    "title": "2  Measles vaccine coverage",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(janitor)\nlibrary(stringi)\nlibrary(patchwork)\nlibrary(vegan)\ninvisible(Sys.setlocale(\"LC_TIME\", \"English\"))\ndf_raw &lt;- readRDS(\"D:/OUCRU/assigned github/vac_coverage/data/vaxreg_hcmc_measles.rds\")\n\n\n\n\nCode\n## data cleaning\ndf &lt;- df_raw %&gt;% na.omit() %&gt;% \n                 subset(date_m1 &gt; dob & \n                        date_m2 &gt; dob & \n                        date_m1 &lt; date_m2 &\n                        year(date_m2) &lt;= 2024 &\n                        year(date_m1) &gt;= min(year(df_raw$dob))) \n\n\nVaccine shortage public started in May 2022 source\n\n3 Vaccine coverage (1st and 2nd dose) in Ho Chi Minh city\n\n\nCode\n## vaccine coverage 1st and 2nd dose\ndate_compute &lt;- seq(as.Date(\"2022-09-01\"),as.Date(\"2024-11-20\"),by = \"weeks\")\n\n## second dose\nout_fn &lt;- data.frame()\n\nfor (i in 1:length(date_compute)){\n  cov &lt;- df %&gt;% \n    mutate(\n      age = decimal_date(date_compute[i]) - decimal_date(dob),\n      is_m2 = if_else(date_m2 &lt;= date_compute[i], 1, 0))  %&gt;% \n    filter(age &gt;= 1, age &lt;= 5) %&gt;% \n    summarise(m2 = sum(is_m2, na.rm = T), n = n(), cov = m2/n)\n  \n  cov_2w &lt;- df %&gt;% \n    mutate(\n      age = decimal_date(date_compute[i]) - decimal_date(dob),\n      is_m2 = if_else(date_m2 &lt;= date_compute[i] %m-% weeks(2), 1, 0))  %&gt;% \n    filter(age &gt;= 1 + 0.5/12, age &lt;= 5 + 0.5/12) %&gt;% \n    summarise(m2 = sum(is_m2, na.rm = T), n = n(), cov = m2/n)\n  \n  out &lt;- data.frame(date = as.Date(date_compute[i]),\n                    cov = as.numeric(cov$cov),\n                    cov_2w = as.numeric(cov_2w$cov))\n  \n  out_fn &lt;- rbind(out_fn,out)\n}\n\n\n## first dose\nout_fn1 &lt;- data.frame()\n\nfor (i in 1:length(date_compute)){\n  \n  cova &lt;- df %&gt;% \n    mutate(\n      age = decimal_date(date_compute[i]) - decimal_date(dob),\n      is_m1 = if_else(date_m1 &lt;= date_compute[i], 1, 0))  %&gt;% \n    filter(age &gt;= 0.75, age &lt;= 5) %&gt;% \n    summarise(m1 = sum(is_m1, na.rm = T), n = n(), cov = m1/n)\n  \n  cov_2wa &lt;- df %&gt;% \n    mutate(\n      age = decimal_date(date_compute[i]) - decimal_date(dob),\n      is_m1 = if_else(date_m1 &lt;= date_compute[i] %m-% weeks(2), 1, 0))  %&gt;% \n    filter(age &gt;= 0.75 + 0.5/12, age &lt;= 5 + 0.5/12) %&gt;% \n    summarise(m1 = sum(is_m1, na.rm = T), n = n(), cov = m1/n)\n  \n  outa &lt;- data.frame(date = as.Date(date_compute[i]),\n                     cov = as.numeric(cova$cov),\n                     cov_2w = as.numeric(cov_2wa$cov))\n  \n  out_fn1 &lt;- rbind(out_fn1,outa)\n}\n\n\n## plot\n\nvac_co &lt;- ggplot()+\n  geom_line(data = out_fn,aes(x = date,y = cov*100,color=\"2\"))+\n  geom_line(data = out_fn1,aes(x = date,y = cov*100,color=\"1\"))+\n  scale_y_continuous(limits = c(0, 100), breaks = seq(0,100,by = 10)) +\n  labs(x = \"Date\",y = \"Vaccine coverage (%)\")+\n  scale_x_date(breaks = \"4 month\",\n               date_labels= \"%b %Y\",\n               limits = c(as.Date(\"2022-09-01\"),as.Date(\"2024-11-20\")))+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1))+\n  scale_color_manual(name=\"Dose\", values=c(\"1\"=\"red\", \"2\"=\"blue\"))+\n  theme_bw()\n\nvac_co2w &lt;-ggplot()+\n  geom_line(data = out_fn,aes(x = date,y = cov_2w*100,color=\"2\"))+\n  geom_line(data = out_fn1,aes(x = date,y = cov_2w*100,color=\"1\"))+\n  scale_y_continuous(limits = c(0, 100), breaks = seq(0,100,by = 10)) +\n  labs(x = \"Date\",y = \"Vaccine coverage with 2-week hypothesis (%)\")+\n  scale_x_date(breaks = \"4 month\",\n               date_labels= \"%b %Y\",\n               limits = c(as.Date(\"2022-09-01\"),as.Date(\"2024-11-20\")))+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1))+\n  scale_color_manual(name=\"Dose\", values=c(\"1\"=\"red\", \"2\"=\"blue\"))+\n  theme_bw()\n\n\n\n\nCode\nvac_co | vac_co2w\n\n\n\n\n\n\n\n4 Coverage\n\n\nCode\ndistrict &lt;- unique(df$district)\n\nout_d &lt;- data.frame()\nout_d1 &lt;- data.frame()\n\nfor (k in 1:length(district)){\n  dfd &lt;- df %&gt;% filter(district == district[k])\n  for (i in 1:length(date_compute)){\n    cov &lt;- dfd %&gt;% \n      mutate(\n        age = decimal_date(date_compute[i]) - decimal_date(dob),\n        is_m2 = if_else(date_m2 &lt;= date_compute[i], 1, 0))  %&gt;% \n      filter(age &gt;= 1, age &lt;= 5) %&gt;% \n      summarise(m2 = sum(is_m2, na.rm = T), n = n(), cov = m2/n)\n    \n    cov_2w &lt;- dfd %&gt;% \n      mutate(\n        age = decimal_date(date_compute[i]) - decimal_date(dob),\n        is_m2 = if_else(date_m2 &lt;= date_compute[i] %m-% weeks(2), 1, 0))  %&gt;% \n      filter(age &gt;= 1 + 0.5/12, age &lt;= 5 + 0.5/12) %&gt;% \n      summarise(m2 = sum(is_m2, na.rm = T), n = n(), cov = m2/n)\n    \n    out_d1 &lt;- data.frame(district = as.character(district[k]),\n                         date = as.Date(date_compute[i]),\n                         cov = as.numeric(cov$cov),\n                         cov_2w = as.numeric(cov_2w$cov))\n    \n    out_d &lt;- rbind(out_d,out_d1)\n  }  \n}\n\nmeancv &lt;- out_d %&gt;% \n  group_by(district) %&gt;% \n  summarise(mean = mean(cov)) \n\nsorted &lt;- meancv[order(-meancv$mean),]\n\nvac_cov &lt;- out_d %&gt;% mutate(dis = factor(district,\n                              levels = as.character(sorted$district))) %&gt;% \nggplot()+\n  geom_line(aes(x = date,y = cov*100,color=\"2\"))+\n  scale_y_continuous(limits = c(0, 100), breaks = seq(0,100,by = 10)) +\n  labs(x = \"Date\",y = \"Vaccine coverage (%)\")+\n  scale_x_date(breaks = \"4 months\",\n               date_labels= \"%b %Y\",\n               limits = c(as.Date(\"2022-09-01\"),as.Date(\"2024-11-20\")))+\n  facet_wrap(vars(dis),ncol = 1)+\n  scale_color_manual(name=\"Dose\", values=c(\"1\"=\"red\", \"2\"=\"blue\"))+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 45,size = 8,hjust=1),\n        axis.text.y = element_text(size = 6))\n\n\n\n\n5 Timely vaccination\n\n\nCode\nweek &lt;- seq(as.Date(\"2022-05-01\"),as.Date(\"2024-07-01\"),by = \"month\")\n\ndttlv &lt;- df[,c(\"dob\",\"district\",\"date_m1\",\"date_m2\")] \nout_timely &lt;- data.frame()\n\nfor (k in 1:length(district)){\n  td &lt;- subset(dttlv, district == district[k]) \n  for (i in 1:length(week)){\n    td$lackd &lt;- week[i]\n    td$ageuntil &lt;- decimal_date(td$lackd) - decimal_date(td$dob)\n    \n    ## subset children aged from 9 months to 9 months 2 weeks at chosen time\n    slec &lt;- td[td$ageuntil &gt;= 0.75 & td$ageuntil &lt;= 0.75 + 0.5*(1/12),]\n    \n    slec$agevac &lt;- decimal_date(slec$date_m1) - decimal_date(slec$dob)\n    slec$vac_on_date1 &lt;- ifelse(slec$agevac &lt; slec$ageuntil + 1/12,1,0)\n    slec$vac_on_date1 &lt;- replace(slec$vac_on_date, is.na(slec$vac_on_date1),0)\n    \n    re &lt;- slec %&gt;% group_by(vac_on_date1) %&gt;% count()  \n    \n    if(nrow(re) == 1){\n      re[2,] &lt;- re[1,]\n      re[1,1] &lt;- 0  \n      re[1,2] &lt;- 0  \n    } \n    \n    cus &lt;- data.frame(district = district[k],\n                      date = week[i],\n                      per = as.numeric(re[2,2])/(as.numeric(re[2,2])+as.numeric(re[1,2])))\n    out_timely &lt;- rbind(out_timely,cus)\n  }\n}\n\n\n\n\n6 IPSUM analysis\n\n\nCode\nipsum &lt;- read_csv(\"data/GEO1_VN2019_79.csv\")\n\nipsum$district &lt;- case_when(\n  ipsum$GEO2_VN == 704079760 ~ \"Quận 1\",\n  ipsum$GEO2_VN == 704079761 ~ \"Quận 12\",\n  ipsum$GEO2_VN == 704079762 ~ \"Thủ Đức\",\n  ipsum$GEO2_VN == 704079763 ~ \"Thủ Đức\",\n  ipsum$GEO2_VN == 704079764 ~ \"Gò Vấp\",\n  ipsum$GEO2_VN == 704079765 ~ \"Bình Thạnh\",\n  ipsum$GEO2_VN == 704079766 ~ \"Tân Bình\",\n  ipsum$GEO2_VN == 704079767 ~ \"Tân Phú\",\n  ipsum$GEO2_VN == 704079768 ~ \"Phú Nhuận\",\n  ipsum$GEO2_VN == 704079769 ~ \"Thủ Đức\",\n  ipsum$GEO2_VN == 704079770 ~ \"Quận 3\",\n  ipsum$GEO2_VN == 704079771 ~ \"Quận 10\",\n  ipsum$GEO2_VN == 704079772 ~ \"Quận 11\",\n  ipsum$GEO2_VN == 704079773 ~ \"Quận 4\",\n  ipsum$GEO2_VN == 704079774 ~ \"Quận 5\",\n  ipsum$GEO2_VN == 704079775 ~ \"Quận 6\",\n  ipsum$GEO2_VN == 704079776 ~ \"Quận 8\",\n  ipsum$GEO2_VN == 704079777 ~ \"Bình Tân\", \n  ipsum$GEO2_VN == 704079778 ~ \"Quận 7\",\n  ipsum$GEO2_VN == 704079783 ~ \"Củ Chi\",\n  ipsum$GEO2_VN == 704079784 ~ \"Hóc Môn\",\n  ipsum$GEO2_VN == 704079785 ~ \"Bình Chánh\",\n  ipsum$GEO2_VN == 704079786 ~ \"Nhà Bè\",\n  ipsum$GEO2_VN == 704079787 ~ \"Cần Giờ\") %&gt;% \n  stri_trans_general(\"latin-ascii\") %&gt;%\n  str_remove_all(\"Quan\") %&gt;% \n  trimws(which = \"both\")\n\n## census for denominator\nhcm19 &lt;- readRDS(\"D:/OUCRU/hfmd/data/census2019.rds\") %&gt;% \n  filter(province == \"Thành phố Hồ Chí Minh\")\n\nhcm19$district &lt;- hcm19$district %&gt;%\n  str_remove_all(\"Quận|Huyện\") %&gt;%\n  str_replace_all(\n    c(\"\\\\b2\\\\b|\\\\b9\\\\b\"  = \"Thủ Đức\")) %&gt;%\n  stri_trans_general(\"latin-ascii\") %&gt;% \n  trimws(which = \"both\")\n\npopdis &lt;- hcm19 %&gt;% group_by(district) %&gt;% \n  summarise(n = sum(n))\n\ndistrictc &lt;- popdis$district\n\n\n\n\nCode\n## function to calculate percentage of each district\nscale_per &lt;- function(data){\n  ou &lt;- data.frame()\n  for (i in 1:22){\n    oo &lt;- data %&gt;% filter(district == districtc[i]) %&gt;% \n      mutate(pop = rep(as.numeric(popdis$n[popdis$district == districtc[i]])),\n             per = (n/pop)*100)\n    ou &lt;- rbind(ou,oo)\n  }\n  return(ou)\n}\n\n\n\n\nCode\n## Level of education or training currently attending\nipsum$edu &lt;-  case_when(\n  ipsum$VN2019A_SCHOOLLEV == 99 ~ \"NIU\",\n  ipsum$VN2019A_SCHOOLLEV == 1 ~ \"Pre-school below 5 years old\",\n  ipsum$VN2019A_SCHOOLLEV == 2 ~ \"Pre-school at 5 years old\",\n  ipsum$VN2019A_SCHOOLLEV == 3 ~ \"Primary\",\n  ipsum$VN2019A_SCHOOLLEV == 4 ~ \"Lower secondary\",\n  ipsum$VN2019A_SCHOOLLEV == 5 ~ \"Higher secondary\",\n  ipsum$VN2019A_SCHOOLLEV == 6 ~ \"Pre-intermediate\",\n  ipsum$VN2019A_SCHOOLLEV == 7 ~ \"Intermediate\",\n  ipsum$VN2019A_SCHOOLLEV == 8 ~ \"College\",\n  ipsum$VN2019A_SCHOOLLEV == 9 ~ \"University\",\n  ipsum$VN2019A_SCHOOLLEV == 10 ~ \"Master\",\n  ipsum$VN2019A_SCHOOLLEV == 11 ~ \"Ph.D. (doctorate)\") %&gt;% \n  \n  factor(levels = c(\"NIU\", \n                    \"Pre-school below 5 years old\",\n                    \"Pre-school at 5 years old\",\n                    \"Primary\",\n                    \"Lower secondary\",\n                    \"Higher secondary\",\n                    \"Pre-intermediate\",\n                    \"Intermediate\",\n                    \"College\",\n                    \"University\",\n                    \"Master\",\n                    \"Ph.D. (doctorate)\")\n  )\n\nhcm_edu &lt;- ipsum %&gt;% group_by(district,edu) %&gt;% count()\n\nedu &lt;- scale_per(hcm_edu) %&gt;% filter(edu != \"NIU\") %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = edu)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Education\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 8)) \n\n## Employment status\nipsum$employ &lt;-  case_when(\n  ipsum$VN2019A_EMPSTAT == 1 ~ \"Employed\",\n  ipsum$VN2019A_EMPSTAT == 2 ~ \"Unemployed\",\n  ipsum$VN2019A_EMPSTAT == 3 ~ \"Inactive\",\n  ipsum$VN2019A_EMPSTAT == 4 ~ \"Overseas\",\n  ipsum$VN2019A_EMPSTAT == 9 ~ \"NIU\") %&gt;% \n  \n  factor(levels = c(\"Employed\",\n                    \"Unemployed\",\n                    \"Inactive\",\n                    \"Overseas\",\n                    \"NIU\")\n  )\n\nhcm_employ &lt;- ipsum %&gt;% group_by(district,employ) %&gt;% count()\n\nemploy &lt;- scale_per(hcm_employ) %&gt;% filter(employ != \"NIU\") %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = employ)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Employment status\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15)) \n\n##Number of sons living in household\nipsum$son_in_house &lt;- as.character(ipsum$VN2019A_CHHOMEM)\nipsum$son_in_house &lt;-  ifelse(ipsum$son_in_house == \"0\",\"None\",\n                              ifelse(ipsum$son_in_house == \"7\",\"7+\",\n                                     ifelse(ipsum$son_in_house == \"99\",\"NIU\",\n                                            ipsum$son_in_house)))\n\nhcm_sih &lt;- ipsum %&gt;% group_by(district,son_in_house) %&gt;% count()\n\n\n##Number of daughter living in household\nipsum$dau_in_house &lt;- as.character(ipsum$VN2019A_CHHOMEF)\nipsum$dau_in_house &lt;-  ifelse(ipsum$dau_in_house == \"0\",\"None\",\n                              ifelse(ipsum$dau_in_house == \"7\",\"7+\",\n                                     ifelse(ipsum$dau_in_house == \"99\",\"NIU\",\n                                            ipsum$dau_in_house)))\n\nhcm_dih &lt;- ipsum %&gt;% group_by(district,dau_in_house) %&gt;% count()\n\n\nson_dau &lt;- full_join(scale_per(hcm_sih) %&gt;% select(district,son_in_house,per),\n          scale_per(hcm_dih) %&gt;% select(district,dau_in_house,per),\n          by = c(\"district\" = \"district\",\n                 \"son_in_house\" = \"dau_in_house\")) \n\ncolnames(son_dau) &lt;- c(\"district\",\"num_child\",\"son\",\"daughter\")\n\nhcm_child&lt;- son_dau %&gt;% pivot_longer(cols=c('son', 'daughter'),\n                            names_to='sex',\n                            values_to='per')\n\nhcm_child$per &lt;- replace(hcm_child$per, is.na(hcm_child$per), 0)\n\nhcm_child &lt;- hcm_child %&gt;% mutate(\n  per2 = case_when(\n    sex == \"daughter\" ~ -per,\n    TRUE ~ per\n  ))\n\nhcm_childa &lt;- hcm_child %&gt;% filter(num_child != \"NIU\") \n\npop_range &lt;- range(hcm_childa$per2 %&gt;% na.omit())\n\npop_range_breaks &lt;- pretty(pop_range, n = 6)\n\nchil &lt;- hcm_child %&gt;% filter(num_child != \"NIU\") %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per2,\n               y = num_child,\n               fill = sex)) +\n  scale_x_continuous(breaks  = pop_range_breaks,\n                     labels = abs(pop_range_breaks))+\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  theme_light()+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Number of children\")\n\n## Faith or religion\nipsum$reli &lt;-  case_when(\n  ipsum$VN2019A_RELIG2 == 99 ~ \"NIU\",\n  ipsum$VN2019A_RELIG2 == 1 ~ \"Buddhism\",\n  ipsum$VN2019A_RELIG2 == 2 ~ \"Catholic\",\n  ipsum$VN2019A_RELIG2 == 3 ~ \"Evangelical\",\n  ipsum$VN2019A_RELIG2 == 4 ~ \"Caodaism\",\n  ipsum$VN2019A_RELIG2 == 5 ~ \"Hoa Hao Buddhism\",\n  ipsum$VN2019A_RELIG2 == 6 ~ \"Islamic\",\n  ipsum$VN2019A_RELIG2 == 7 ~ \"Baha’i Faith\",\n  ipsum$VN2019A_RELIG2 == 8 ~ \"Pure Land Buddhist Association of Vietnam\",\n  ipsum$VN2019A_RELIG2 == 9 ~ \"Tu An Hieu Nghia (Four Debts of Gratitude) Buddhism\",\n  ipsum$VN2019A_RELIG2 == 11 ~ \"Cham Brahmin\",\n  ipsum$VN2019A_RELIG2 == 12 ~ \"Church of Jesus Christ of Latter-day Saints (Mormon)\",\n  ipsum$VN2019A_RELIG2 == 13 ~ \"Hieu Nghia Ta Lon Buddhism (Registration Granted)\",\n  ipsum$VN2019A_RELIG2 == 14 ~ \"Vietnam Seventh-day Adventist Church\") %&gt;% \n  \n  factor(levels = c(\"NIU\",\n                    \"Buddhism\",\n                    \"Catholic\",\n                    \"Evangelical\",\n                    \"Caodaism\",\n                    \"Hoa Hao Buddhism\",\n                    \"Islamic\",\n                    \"Baha’i Faith\",\n                    \"Pure Land Buddhist Association of Vietnam\",\n                    \"Tu An Hieu Nghia (Four Debts of Gratitude) Buddhism\",\n                    \"Cham Brahmin\",\n                    \"Church of Jesus Christ of Latter-day Saints (Mormon)\",\n                    \"Hieu Nghia Ta Lon Buddhism (Registration Granted)\",\n                    \"Vietnam Seventh-day Adventist Church\")\n  )\n\nhcm_reli &lt;- ipsum %&gt;% group_by(district,reli) %&gt;% count()\n\nreli &lt;- scale_per(hcm_reli) %&gt;% filter(reli != \"NIU\" & per &gt;=0.1) %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = reli)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Religion\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15)) \n\n\n\n\n7 Vaccination delay in Ho Chi Minh city\n\n\nCode\n# Delay distribution\n\ndttlv$date_m1_ontime &lt;- dttlv$dob %m+% months(9)\ndttlv$delay &lt;- interval(dttlv$date_m1_ontime,dttlv$date_m1) / months(1)\n\n\n## Delay distribution of HCMC\n\n\ndttlv %&gt;% na.omit() %&gt;% \n  filter(delay &gt; 0 & date_m1_ontime &gt;= as.Date(\"2022-05-01\")\n         & date_m1_ontime &lt;= as.Date(\"2023-12-31\")) %&gt;% \n  ggplot(aes(x=delay)) +\n  geom_density()+\n  labs(x = \"Month\")\n\n\n\n\n\nCode\n## Each districts with demographic variables\nmeandl &lt;- dttlv %&gt;% na.omit() %&gt;% \n  filter(delay &gt; 0 & date_m1_ontime &gt;= as.Date(\"2022-05-01\")\n         & date_m1_ontime &lt;= as.Date(\"2023-12-31\")) %&gt;% \n  group_by(district) %&gt;% \n  summarise(median = median(delay,na.rm = T)) \n\nvac_dl &lt;- dttlv %&gt;% \n  mutate(dis = factor(district, \n                      levels = as.character(sorted$district))) %&gt;% \n  filter(delay &gt; 0 & date_m1_ontime &gt;= as.Date(\"2022-05-01\")\n         & date_m1_ontime &lt;= as.Date(\"2023-12-31\")) %&gt;% \n  ggplot(aes(x=delay)) +\n  geom_density()+\n  labs(x = \"Month\")+\n  xlim(0,5)+\n  facet_wrap(vars(dis),ncol = 1)+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1)) \n##\nmonth &lt;- seq(as.Date(\"2022-05-01\"),as.Date(\"2024-01-01\"),by = \"month\")\ndis2 &lt;- dttlv$district %&gt;% unique()\nuot &lt;- data.frame()\nuot2 &lt;- data.frame()\nfor (k in 1:length(dis2)){\n  dtd &lt;- dttlv %&gt;% filter(district == dis2[k])\n  for (i in 1:(length(month)-1)){\n    emon &lt;- dtd %&gt;% na.omit() %&gt;% \n      filter(date_m1_ontime &gt;= month[i] & \n               date_m1_ontime &lt;= month[i+1] &\n               delay &gt; 0)\n    uot2 &lt;- data.frame(district = dis2[k],\n                       month = month[i],\n                       del = median(emon$delay)) \n    uot &lt;- rbind(uot,uot2)\n  }  \n}\n\nmonth_delay &lt;- uot %&gt;% \n  mutate(dis = factor(district, \n                      levels = as.character(sorted$district))) %&gt;%\n  ggplot(aes(x = month,y=del)) +\n  geom_bar(stat = \"identity\")+\n  labs(x = \"Month\", y = \"The median of delayed month\")+\n  facet_wrap(vars(dis),ncol = 1)+\n  scale_x_date(breaks = \"2 months\",\n               date_labels= \"%b %Y\")+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1)) \n\n\n\n\n8 Vaccine coverage and variables\n\n\nCode\nvac_cov | time_vac | vac_dl | month_delay | edu | employ | reli | chil  \n\n\n\n\n\n\n\n9 Nestedness analysis of economical variable\n\n\nCode\nipsum$tv &lt;- ifelse(ipsum$VN2019A_TV == 1,1,0)\nipsum$radio &lt;- ifelse(ipsum$VN2019A_RADIO == 1,1,0)\nipsum$computer &lt;- ifelse(ipsum$VN2019A_COMPUTER == 1,1,0)\nipsum$phone &lt;- ifelse(ipsum$VN2019A_PHONE == 1,1,0)\nipsum$refrig &lt;- ifelse(ipsum$VN2019A_REFRIG == 1,1,0)\nipsum$washer &lt;- ifelse(ipsum$VN2019A_WASHER == 1,1,0)\nipsum$watheat &lt;- ifelse(ipsum$VN2019A_WATHEAT == 1,1,0)\nipsum$aircon &lt;- ifelse(ipsum$VN2019A_AIRCON == 1,1,0)\nipsum$motorcyc &lt;- ifelse(ipsum$VN2019A_MOTORCYC == 1,1,0)\nipsum$bicycle &lt;- ifelse(ipsum$VN2019A_BIKE == 1,1,0)\nipsum$car &lt;- ifelse(ipsum$VN2019A_CAR == 1,1,0)\n\nwealth_index &lt;- ipsum[,c(\"district\",\"tv\",\"computer\",\"phone\",\n                      \"refrig\",\"washer\",\"watheat\",\"aircon\",\"motorcyc\",\n                      \"bicycle\",\"car\")] \n\nd1 &lt;- nestedtemp(wealth_index[,-1])\n\nplot(d1, kind=\"incid\",names = TRUE,ylab=\"\",yaxt=\"n\",las=1)\n\n\n\n\n\n\n\nCode\n## rearrange column follow the order of nestedness analysis \n\nwealth_index &lt;- ipsum[,c(\"district\",\"phone\",\"motorcyc\",\"tv\",\"refrig\",\n                         \"washer\",\"computer\",\"aircon\",\"watheat\",\n                         \"bicycle\",\"car\")] \n\n## select the highest property of each individual \nwealth_index &lt;- cbind(wealth_index[,1],\n                      wealth_index[,-1] %&gt;%\n                        rowwise() %&gt;%\n                        mutate(highest_property = names(.)[max(which(c_across(everything()) == 1))]) %&gt;%\n                        ungroup()) %&gt;% na.omit()\n\nwealth_index$quantile  &lt;-  \n           case_when(wealth_index$highest_property == \"car\" ~ \"Richest, 25%\",\n                     wealth_index$highest_property == \"bicycle\" | \n                     wealth_index$highest_property == \"watheat\" | \n                     wealth_index$highest_property == \"aircon\"  ~ \"Middle, 25%\",\n                     wealth_index$highest_property == \"washer\" | \n                     wealth_index$highest_property == \"refrig\"| \n                     wealth_index$highest_property == \"computer\"  ~ \"Lower Middle, 25%\",\n                     wealth_index$highest_property == \"phone\" | \n                     wealth_index$highest_property == \"motorcyc\" | \n                     wealth_index$highest_property == \"tv\"   ~ \"Poorest, 25%\") %&gt;% \n           factor(levels = c(\"Richest, 25%\",\n                             \"Middle, 25%\",\n                             \"Lower Middle, 25%\",\n                             \"Poorest, 25%\")\n                    )\n\nwealth &lt;- wealth_index %&gt;% group_by(district) %&gt;% \n  count(quantile) %&gt;% scale_per() %&gt;% \n  mutate(dis = factor(district,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = quantile)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Wealth Quantile\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15)) \n\n\n\n\nCode\nvac_cov | time_vac | vac_dl | month_delay | wealth |edu | employ | reli | chil"
  },
  {
    "objectID": "vac_cov.html#ho-chi-minh-city",
    "href": "vac_cov.html#ho-chi-minh-city",
    "title": "1  Measles vaccine coverage",
    "section": "2.1 Ho Chi Minh City",
    "text": "2.1 Ho Chi Minh City"
  },
  {
    "objectID": "vac_cov.html#districts",
    "href": "vac_cov.html#districts",
    "title": "1  Measles vaccine coverage",
    "section": "3.2 Districts",
    "text": "3.2 Districts"
  },
  {
    "objectID": "vac_cov.html#ipsum-demographic-data",
    "href": "vac_cov.html#ipsum-demographic-data",
    "title": "1  Measles vaccine coverage",
    "section": "2.2 IPSUM (demographic data)",
    "text": "2.2 IPSUM (demographic data)"
  },
  {
    "objectID": "vac_cov.html#social-variable",
    "href": "vac_cov.html#social-variable",
    "title": "1  Measles vaccine coverage",
    "section": "8.1 Social Variable",
    "text": "8.1 Social Variable"
  },
  {
    "objectID": "vac_cov.html#census-2019",
    "href": "vac_cov.html#census-2019",
    "title": "1  Measles vaccine coverage",
    "section": "5.1 Census 2019",
    "text": "5.1 Census 2019"
  },
  {
    "objectID": "vac_cov.html#ipsum-2019",
    "href": "vac_cov.html#ipsum-2019",
    "title": "1  Measles vaccine coverage",
    "section": "3.1 IPSUM 2019",
    "text": "3.1 IPSUM 2019"
  },
  {
    "objectID": "vac_cov.html#education",
    "href": "vac_cov.html#education",
    "title": "1  Measles vaccine coverage",
    "section": "8.2 Education",
    "text": "8.2 Education"
  },
  {
    "objectID": "vac_cov.html#uran-rural-status",
    "href": "vac_cov.html#uran-rural-status",
    "title": "1  Measles vaccine coverage",
    "section": "8.3 Uran-rural status",
    "text": "8.3 Uran-rural status"
  },
  {
    "objectID": "vac_cov.html#number-of-own-children-under-age-5-in-household",
    "href": "vac_cov.html#number-of-own-children-under-age-5-in-household",
    "title": "1  Measles vaccine coverage",
    "section": "8.4 Number of own children under age 5 in household",
    "text": "8.4 Number of own children under age 5 in household"
  },
  {
    "objectID": "vac_cov.html#religion",
    "href": "vac_cov.html#religion",
    "title": "1  Measles vaccine coverage",
    "section": "8.5 Religion",
    "text": "8.5 Religion"
  },
  {
    "objectID": "vac_cov.html#owership",
    "href": "vac_cov.html#owership",
    "title": "1  Measles vaccine coverage",
    "section": "8.6 Owership",
    "text": "8.6 Owership\n\n\n\n\n\n\nVaccine coverageTimely vaccination percentage"
  },
  {
    "objectID": "nestedness.html",
    "href": "nestedness.html",
    "title": "Nestedness analysis",
    "section": "",
    "text": "Code\nlibrary(vegan)\nlibrary(tidyverse)\nlibrary(stringi)\n\n\n\n\nCode\ndf &lt;- readRDS(\"D:/OUCRU/IPSUM/ipumsi_hcmc_2019.rds\")\n\ndf$qh &lt;- case_when(\n  df$GEO2_VN == 704079760 ~ \"Quận 1\",\n  df$GEO2_VN == 704079761 ~ \"Quận 12\",\n  df$GEO2_VN == 704079762 ~ \"Thủ Đức\",\n  df$GEO2_VN == 704079763 ~ \"Thủ Đức\",\n  df$GEO2_VN == 704079764 ~ \"Gò Vấp\",\n  df$GEO2_VN == 704079765 ~ \"Bình Thạnh\",\n  df$GEO2_VN == 704079766 ~ \"Tân Bình\",\n  df$GEO2_VN == 704079767 ~ \"Tân Phú\",\n  df$GEO2_VN == 704079768 ~ \"Phú Nhuận\",\n  df$GEO2_VN == 704079769 ~ \"Thủ Đức\",\n  df$GEO2_VN == 704079770 ~ \"Quận 3\",\n  df$GEO2_VN == 704079771 ~ \"Quận 10\",\n  df$GEO2_VN == 704079772 ~ \"Quận 11\",\n  df$GEO2_VN == 704079773 ~ \"Quận 4\",\n  df$GEO2_VN == 704079774 ~ \"Quận 5\",\n  df$GEO2_VN == 704079775 ~ \"Quận 6\",\n  df$GEO2_VN == 704079776 ~ \"Quận 8\",\n  df$GEO2_VN == 704079777 ~ \"Bình Tân\", \n  df$GEO2_VN == 704079778 ~ \"Quận 7\",\n  df$GEO2_VN == 704079783 ~ \"Củ Chi\",\n  df$GEO2_VN == 704079784 ~ \"Hóc Môn\",\n  df$GEO2_VN == 704079785 ~ \"Bình Chánh\",\n  df$GEO2_VN == 704079786 ~ \"Nhà Bè\",\n  df$GEO2_VN == 704079787 ~ \"Cần Giờ\") %&gt;% \n  stri_trans_general(\"latin-ascii\") %&gt;%\n  str_remove_all(\"Quan\") %&gt;% \n  trimws(which = \"both\")\n\n##\n\ndf$ownership &lt;- ifelse(df$OWNERSHIP == 1,1,0)\ndf$water_supply &lt;- ifelse(df$WATSUP == 10,1,0)\ndf$aircon &lt;- ifelse(df$AIRCON == 10,0,1)\ndf$computer &lt;- ifelse(df$COMPUTER == 2,1,0)\ndf$washer &lt;- ifelse(df$WASHER == 2,1,0)\ndf$refrig &lt;- ifelse(df$REFRIG == 2,1,0)\ndf$tv &lt;- ifelse(df$TV == 20,1,0)\ndf$radio &lt;- ifelse(df$RADIO == 2,1,0)\ndf$electric &lt;- ifelse(df$ELECTRIC == 1,1,0)\ndf$hotwater &lt;- ifelse(df$HOTWATER == 2,1,0)\ndf$phone &lt;- ifelse(df$PHONE == 2,1,0)\n\nwealth_index &lt;- df[,c(\"qh\",\"ownership\",\"water_supply\",\"aircon\",\"computer\",\n                      \"washer\",\"refrig\",\"tv\",\"radio\",\"electric\",\n                      \"hotwater\",\"phone\")] \n\n\n\n\nCode\nd1 &lt;- nestedtemp(wealth_index[,-1])\n\nplot(d1, kind=\"incid\",names = TRUE,ylab=\"\",yaxt=\"n\",las=1)"
  },
  {
    "objectID": "vac_cov.html#delay-distribution-of-hcmc",
    "href": "vac_cov.html#delay-distribution-of-hcmc",
    "title": "1  Measles vaccine coverage",
    "section": "5.1 Delay distribution of HCMC",
    "text": "5.1 Delay distribution of HCMC\n\n\nCode\ndttlv %&gt;% na.omit() %&gt;% \n  filter(delay &gt; 0 & date_m1_ontime &gt;= as.Date(\"2022-05-01\")\n         & date_m1_ontime &lt;= as.Date(\"2023-12-31\")) %&gt;% \n  ggplot(aes(x=delay)) +\n  geom_density()+\n  labs(x = \"Month\")"
  },
  {
    "objectID": "vac_cov.html#each-districts-with-demographic-variables",
    "href": "vac_cov.html#each-districts-with-demographic-variables",
    "title": "1  Measles vaccine coverage",
    "section": "5.2 Each districts with demographic variables",
    "text": "5.2 Each districts with demographic variables\n\n\nCode\nmeandl &lt;- dttlv %&gt;% na.omit() %&gt;% \n  filter(delay &gt; 0 & date_m1_ontime &gt;= as.Date(\"2022-05-01\")\n         & date_m1_ontime &lt;= as.Date(\"2023-12-31\")) %&gt;% \n  group_by(district) %&gt;% \n  summarise(median = median(delay,na.rm = T)) \n\nsorted &lt;- meandl[order(-meandl$median),]\n\n\n\n\nCode\nvac_dl &lt;- dttlv %&gt;% \n  mutate(dis = factor(district, \n         levels = as.character(sorted$district))) %&gt;% \n  filter(delay &gt; 0 & date_m1_ontime &gt;= as.Date(\"2022-05-01\")\n         & date_m1_ontime &lt;= as.Date(\"2023-12-31\")) %&gt;% \n  ggplot(aes(x=delay)) +\n  geom_density()+\n  labs(x = \"Month\")+\n  xlim(0,5)+\n  facet_wrap(vars(dis),ncol = 1)+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1)) \n##\nmonth &lt;- seq(as.Date(\"2022-05-01\"),as.Date(\"2024-01-01\"),by = \"month\")\ndis2 &lt;- dttlv$district %&gt;% unique()\nuot &lt;- data.frame()\nuot2 &lt;- data.frame()\nfor (k in 1:length(dis2)){\n  dtd &lt;- dttlv %&gt;% filter(district == dis2[k])\n  for (i in 1:(length(month)-1)){\n    emon &lt;- dtd %&gt;% na.omit() %&gt;% \n      filter(date_m1_ontime &gt;= month[i] & \n               date_m1_ontime &lt;= month[i+1] &\n               delay &gt; 0)\n    uot2 &lt;- data.frame(district = dis2[k],\n                       month = month[i],\n                       del = median(emon$delay)) \n    uot &lt;- rbind(uot,uot2)\n  }  \n}\n\nmonth_delay &lt;- uot %&gt;% \n  mutate(dis = factor(district, \n                      levels = as.character(sorted$district))) %&gt;%\n  ggplot(aes(x = month,y=del)) +\n  geom_bar(stat = \"identity\")+\n  labs(x = \"Month\", y = \"The median of delayed month\")+\n  facet_wrap(vars(dis),ncol = 1)+\n  scale_x_date(breaks = \"2 months\",\n               date_labels= \"%b %Y\")+\n  theme_bw()+\n  theme(axis.text.x = element_text(angle = 45,size = 8,\n                                   hjust=1)) \n##\nedu &lt;- scale_per(hcm_edu) %&gt;% \n  mutate(dis = factor(qh,\n                      levels = as.character(sorted$district))) %&gt;% \n  ggplot() +\n  geom_col(aes(x = per,\n               y = edu)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Education\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15)) \n\nurb &lt;- scale_per(urban) %&gt;% \n  mutate(dis = factor(qh,\n                      levels = as.character(sorted$district))) %&gt;%\n  ggplot() +\n  geom_col(aes(x = per,\n               y = urban)) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Urban-rural status\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15))\n\nchild5 &lt;- scale_per(hcm_chil5) %&gt;%\n  mutate(dis = factor(qh,\n                      levels = as.character(sorted$district))) %&gt;%\n  # filter(NCHLT5 != 0) %&gt;%\n  ggplot() +\n  geom_col(aes(x = per,\n               y = as.factor(NCHLT5))) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Number of own children under age 5 in household\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15)) \n\nreli &lt;- scale_per(hcm_reli) %&gt;%\n  mutate(dis = factor(qh,\n                      levels = as.character(sorted$district))) %&gt;%\n  ggplot() +\n  geom_col(aes(x = per,\n               y = as.factor(reli))) +\n  facet_wrap(vars(dis),\n             # scales = \"free\",\n             ncol = 1)+\n  labs(x = \"Percentage of total population(%)\",\n       y = \"Religion\")+\n  theme_light()+\n  theme(axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15)) \n\n\n\n\nCode\nvac_dl |month_delay |edu |urb | child5 | reli"
  }
]